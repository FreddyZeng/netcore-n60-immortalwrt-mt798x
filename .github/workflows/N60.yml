name: N60

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
        
env:
  REPO_URL: https://github.com/FreddyZeng/immortalwrt-mt798x-24.10_x60_pro.git
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai
  UPLOAD_OUTPUT: true

jobs:
   build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    
    - name: 查看磁盘信息
      run: |
        df -hT /
        df -hT /mnt
        lsblk
    
#    - name: Free Disk Space (Ubuntu)
#      uses: jlumbroso/free-disk-space@main
#      with:
#        # this might remove tools that are actually needed,
#        # if set to "true" but frees about 6 GB
#        tool-cache: true
#        
#        # all of these default to true, but feel free to set to
#        # "false" if necessary for your workflow
#        android: true
#        dotnet: true
#        haskell: true
#        large-packages: true
#        swap-storage: true
#    
#    - name: 查看磁盘信息
#      run: |
#        df -hT /
#        df -hT /mnt
#        lsblk
    
    - name: 配置
      uses: actions/checkout@master
    
    - name: 配置环境
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
      
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack neofetch antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 curl gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python3-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev 
      
    - name: 克隆源码
      working-directory: /mnt/workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH /mnt/workdir/openwrt
        sudo ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt
        sudo ln -sf /mnt/workdir/openwrt /openwrt 


    - name: 配置 Feeds
      run: |
        cd /mnt/workdir/openwrt
        cp -f defconfig/mt7986-ax6000.config .config
        
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 修改 Lan IP
      run: |
        cd /mnt/workdir/openwrt
        sed -i 's/192.168.1.1/192.168.110.1/g' package/base-files/files/bin/config_generate
        neofetch



    - name: 下载依赖
      run: |
        cd /mnt/workdir/openwrt
        make defconfig
        make download -j8 V=sc
        
        
        lsblk
        
    - name: SSH 连接
      uses: P3TERX/ssh2actions@v1.0.0
      if: github.event.inputs.ssh == 'true'
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 编译固件
      continue-on-error: true
      run: |
        cd /mnt/workdir/openwrt
        make clean
        make -j$(nproc) V=sc || true
        echo "FILE_DATE=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        

    - name: 移动文件
      continue-on-error: true
      run: |
        mkdir -p /mnt/workdir/openwrt/bin/targets
        cp -rf /mnt/workdir/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-mediatek_mt7986/linux-5.4.284/net /mnt/workdir/openwrt/bin/targets
        cp -rf /mnt/workdir/openwrt/build_dir/target-aarch64_cortex-a53_musl/linux-mediatek_mt7986/linux-5.4.284/net /mnt/workdir/openwrt/bin/targets
        

    - name : 上传固件文件
      uses: actions/upload-artifact@master
      if: env.UPLOAD_OUTPUT == 'true' && !cancelled()
      with:
        name: ${{ env.DEVICE }}--${{ env.FILE_DATE }}
        path: /mnt/workdir/openwrt/bin
        
    - name: 整理输出文件
      run: |
        cd /mnt/workdir/openwrt/bin/targets/*/*
        rm -rf packages
    
    - name: 发布固件至 Release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ env.DEVICE }}--${{ env.FILE_DATE }}"
        artifacts: "/mnt/workdir/openwrt/bin/targets/*/*/*"
        body: |
          # 未测试×
          
          IP: 192.168.2.1 | Password: none

